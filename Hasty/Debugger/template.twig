<style>
    #flDebug * {
        margin: 0;
        padding: 0;
        line-height: 1.5em;
        color: #555;
        font-size: 12px;
        outline: 0;
        background: none;
    }

    #flDebug {
        font-family: sans-serif;
        color: #000;
        background: #fff;
    }

    #flDebug tbody, #flDebug code, #flDebug pre {
        font-family: Consolas, Monaco, "Bitstream Vera Sans Mono", "Lucida Console", monospace;
    }

    #flDebug #flDebugToolbar {
        background: #111;
        width: 200px;
        z-index: 100000000;
        position: fixed;
        top: 0;
        bottom: 0;
        right: 0;
        opacity: 0.9;
    }

    #flDebug #flDebugToolbar small {
        color: #999;
    }

    #flDebug #flDebugToolbar ul {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    #flDebug #flDebugToolbar li {
        border-bottom: 1px solid #222;
        color: #fff;
        display: block;
        font-weight: bold;
        float: none;
        margin: 0;
        padding: 0;
        position: relative;
        width: auto;
    }

    #flDebug #flDebugToolbar li > a,
    #flDebug #flDebugToolbar li > div.contentless {
        font-weight: normal;
        font-style: normal;
        text-decoration: none;
        display: block;
        font-size: 13px;
        padding: 7px 10px 7px 14px;
        color: #fff;
    }

    #flDebug #flDebugToolbar li a:hover {
        background-color: #444;
    }

    #flDebug #flDebugToolbar li.active {
        background-color: #333;
    }

    #flDebug #flDebugToolbar li.active a:hover {
        color: #b36a60;
        background-color: transparent;
    }

    #flDebug #flDebugToolbar li small {
        font-size: 12px;
        color: #999;
        font-style: normal;
        text-decoration: none;
        font-variant: small-caps;
    }

    #flDebug #flDebugToolbar li .switch {
        font-size: 10px;
        position: absolute;
        display: block;
        color: white;
        height: 16px;
        width: 16px;
        cursor: pointer;
        top: 15px;
        right: 2px;
    }

    #flDebug #flDebugToolbar li .switch.active {
        background-image: url(../img/tick.png);
    }

    #flDebug #flDebugToolbar li .switch.inactive {
        background-image: url(../img/tick-red.png);
    }

    #flDebug #flDebugToolbarHandle {
        position: fixed;
        background: #fff;
        border: 1px solid #111;
        top: 30px;
        right: 0;
        z-index: 100000000;
        opacity: 0.75;
    }

    #flDebug a#flShowToolBarButton {
        display: block;
        height: 40px;
        width: 30px;
        border-right: none;
        border-bottom: 1px solid #fff;
        border-top: 1px solid #fff;
        border-left: 1px solid #fff;
        color: #fff;
        font-size: 10px;
        font-weight: bold;
        text-decoration: none;
        text-align: center;
        text-indent: -999999px;
        background: #000;
        opacity: 0.5;
    }

    #flDebug a#flShowToolBarButton:hover {
        background-color: #111;
        opacity: 1.0;
    }

    #flDebug code {
        display: inline;
        white-space: pre;
        overflow: auto;
    }

    #flDebug tr.flDebugOdd {
        background-color: #f5f5f5;
    }

    #flDebug .panelContent {
        display: none;
        position: fixed;
        margin: 0;
        top: 0;
        right: 200px;
        bottom: 0;
        left: 0px;
        background-color: #eee;
        color: #666;
        z-index: 100000000;
    }

    #flDebug .panelContent > div {
        border-bottom: 1px solid #ddd;
    }

    #flDebug .flDebugPanelTitle {
        position: absolute;
        background-color: #ffc;
        color: #666;
        padding-left: 20px;
        top: 0;
        right: 0;
        left: 0;
        height: 50px;
    }

    #flDebug .flDebugPanelTitle code {
        display: inline;
        font-size: inherit;
    }

    #flDebug .flDebugPanelContent {
        position: absolute;
        top: 10px;
        right: 0;
        bottom: 0;
        left: 0;
        height: auto;
        padding: 0 0 0 10px;
    }

    #flDebug .flDebugPanelContent .scroll {
        height: 100%;
        overflow: auto;
        display: block;
        padding: 0 10px 10px 0;
    }

    #flDebug h3 {
        font-size: 24px;
        font-weight: normal;
        line-height: 50px;
    }

    #flDebug h4 {
        font-size: 20px;
        font-weight: bold;
        margin-top: 0.8em;
    }

    #flDebug h5 {
        font-size: 14px;
    }

    #flDebug .panelContent table {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: 100%;
        background-color: #fff;
        display: block;
        margin-top: 0;
        overflow: auto;
    }

    #flDebug .panelContent tbody td,
    #flDebug .panelContent tbody th {
        vertical-align: top;
        padding: 2px 3px;
        padding: 2px 10px;
        font-size: 12px;
    }

    #flDebug .panelContent thead th {
        padding: 1px 6px 1px 3px;
        text-align: left;
        font-weight: bold;
        font-size: 14px;
        padding: 4px 10px;
    }

    #flDebug .panelContent tbody th {
        width: 12em;
        text-align: right;
        color: #666;
        padding-right: .5em;
    }

    #flDebug .panelContent tbody pre {
        background: transparent;
        margin: 0px;
        padding: 0px;
        border: 0px;
    }

    #flDebug .panelContent ol li {
        margin: 0 0 1em 2em;
    }

    #flDebug .panelContent pre {
        border: 1px solid #ccc;
        background-color: #fff;
        display: block;
        margin: 0.8em 0;
        padding: 0.2em 0.5em;
    }

    #flDebug .flTemplateHideContextDiv {
        background-color: #fff;
    }

    #flDebug .panelContent .flDebugClose {
        position: absolute;
        top: 4px;
        right: 15px;
        /*
        text-indent:-9999999px;
        display:block;
        position:absolute;
        top:4px;
        right:15px;
        height:40px;
        width:40px;
        background:url(../img/close.png) no-repeat center center;
        */
    }

    #flDebug .panelContent .flDebugClose:hover {
        background-image: url(../img/close_hover.png);
    }

    #flDebug .panelContent .flDebugClose.flDebugBack {
        background-image: url(../img/back.png);
    }

    #flDebug .panelContent .flDebugClose.flDebugBack:hover {
        background-image: url(../img/back_hover.png);
    }

    #flDebug .panelContent dt, #flDebug .panelContent dd {
        display: block;
    }

    #flDebug .panelContent dt {
        margin-top: 0.75em;
    }

    #flDebug .panelContent dd {
        margin-left: 10px;
    }

    #flDebug a.toggleTemplate {
        padding: 4px;
        background-color: #bbb;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
    }

    #flDebug a.toggleTemplate:hover {
        padding: 4px;
        background-color: #444;
        color: #ffe761;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
    }

    #flDebug a.flTemplateShowContext, #flDebug a.flTemplateShowContext span.toggleArrow {
        color: #999;
    }

    #flDebug a.flTemplateShowContext:hover, #flDebug a.flTemplateShowContext:hover span.toggleArrow {
        color: #000;
        cursor: pointer;
    }

    #flDebug .flDebugSqlWrap {
        position: relative;
    }

    #flDebug .flDebugSql {
        z-index: 100000002;
    }

    #flDebug .flSQLHideStacktraceDiv tbody th {
        text-align: left;
    }

    #flDebug span.flDebugLineChart {
        background-color: #777;
        height: 3px;
        position: absolute;
        bottom: 0;
        top: 0;
        left: 0;
        display: block;
        z-index: 1000000001;
    }

    #flDebug span.flDebugLineChartWarning {
        background-color: #900;
    }

    #flDebug .highlight {
        color: #000;
    }

    #flDebug .highlight .err {
        color: #000;
    }

    /* Error */
    #flDebug .highlight .g {
        color: #000;
    }

    /* Generic */
    #flDebug .highlight .k {
        color: #000;
        font-weight: bold
    }

    /* Keyword */
    #flDebug .highlight .o {
        color: #000;
    }

    /* Operator */
    #flDebug .highlight .n {
        color: #000;
    }

    /* Name */
    #flDebug .highlight .mi {
        color: #000;
        font-weight: bold
    }

    /* Literal.Number.Integer */
    #flDebug .highlight .l {
        color: #000;
    }

    /* Literal */
    #flDebug .highlight .x {
        color: #000;
    }

    /* Other */
    #flDebug .highlight .p {
        color: #000;
    }

    /* Punctuation */
    #flDebug .highlight .m {
        color: #000;
        font-weight: bold
    }

    /* Literal.Number */
    #flDebug .highlight .s {
        color: #333
    }

    /* Literal.String */
    #flDebug .highlight .w {
        color: #888888
    }

    /* Text.Whitespace */
    #flDebug .highlight .il {
        color: #000;
        font-weight: bold
    }

    /* Literal.Number.Integer.Long */
    #flDebug .highlight .na {
        color: #333
    }

    /* Name.Attribute */
    #flDebug .highlight .nt {
        color: #000;
        font-weight: bold
    }

    /* Name.Tag */
    #flDebug .highlight .nv {
        color: #333
    }

    /* Name.Variable */
    #flDebug .highlight .s2 {
        color: #333
    }

    /* Literal.String.Double */
    #flDebug .highlight .cp {
        color: #333
    }

    /* Comment.Preproc */

    /* tablesorted */
    #flDebug table.tablesorter {
        width: 100%;
    }

    #flDebug table.tablesorter thead th, table.tablesorter tfoot th {
        padding-right: 20px;
    }

    #flDebug table.tablesorter thead th {
        background: url(../img/bg.gif) center right no-repeat;
        cursor: pointer;
    }

    #flDebug table.tablesorter tbody tr.odd td {
        background-color: #F0F0F6;
    }

    #flDebug table.tablesorter thead .headerSortUp {
        background-image: url(../img/asc.gif);
    }

    #flDebug table.tablesorter thead .headerSortDown {
        background-image: url(../img/desc.gif);
    }

    #flDebug table.tablesorter thead .headerSortDown, #flDebug table.tablesorter thead .headerSortUp {
        background-color: #8dbdd8;
    }
</style>
<div id="flDebug" style="display:none;">
    <script type="text/javascript">var DEBUG_TOOLBAR_STATIC_PATH = '{{ static_path }}'</script>

    <div style="display: none;" id="flDebugToolbar">
        <ol id="flDebugPanelList">
            {% if panels %}
                <li><a id="flHideToolBarButton" href="#" title="Hide Toolbar">Hide &raquo;</a></li>
            {% else %}
                <li id="flDebugButton">DEBUG</li>
            {% endif %}

            {% for panel in panels %}
            <li id="{{ panel.dom_id }}">
                {% if panel.has_content %}
                <a href="{{ panel.url }}" title="{{ panel.title }}" class="{{ panel.dom_id }}">
                    {% else %}
                    <div class="contentless">
                        {% endif %}

                        {{ panel.nav_title }}
                        {% if panel.nav_subtitle() %}<br/>
                            <small>{{ panel.nav_subtitle() }}</small>
                        {% endif %}

                        {% if panel.has_content %}
                </a>
                {% else %}
    </div>
    {% endif %}
    {% if panel.user_activate %}
        <span class="switch{% if panel.is_active %} active{% else %} inactive{% endif %}"
              title="Enable or disable the panel"></span>
    {% endif %}
    </li>
    {% endfor %}
    </ol>
</div>
<div style="display:none;" id="flDebugToolbarHandle">
    <a title="Show Toolbar" id="flShowToolBarButton" href="#">&laquo;</a>
</div>

{% for panel in panels %}
    {% if panel.has_content %}
        <div id="{{ panel.dom_id }}-content" class="panelContent">
            <!--
            <div class="flDebugPanelTitle">
                <a href="" class="flDebugClose">Close</a>

                <h3>{{ panel.title }}</h3>
            </div>
            -->
            <div class="flDebugPanelContent">
                <div class="scroll">
                    {{ panel.content|raw }}
                </div>
            </div>
        </div>
    {% endif %}
{% endfor %}
<div id="flDebugWindow" class="panelContent"></div>
</div>

<script>
    if (typeof jQuery === 'undefined') {
        var sc = document.createElement('script');
        sc.src = 'js/jquery-2.1.1.min.js';
        document.write('<script src=\"/js/jquery-2.1.1.min.js\"><\/script>');
    }
</script>

<script>
    (function ($) {
        $.cookie = function (name, value, options) {
            if (typeof value != 'undefined') {
                options = options || {};
                if (value === null) {
                    value = '';
                    options.expires = -1;
                }
                var expires = '';
                if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
                    var date;
                    if (typeof options.expires == 'number') {
                        date = new Date();
                        date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
                    } else {
                        date = options.expires;
                    }
                    expires = '; expires=' + date.toUTCString();
                }
                var path = options.path ? '; path=' + (options.path) : '';
                var domain = options.domain ? '; domain=' + (options.domain) : '';
                var secure = options.secure ? '; secure' : '';
                document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
            } else {
                var cookieValue = null;
                if (document.cookie && document.cookie != '') {
                    var cookies = document.cookie.split(';');
                    for (var i = 0; i < cookies.length; i++) {
                        var cookie = $.trim(cookies[i]);
                        if (cookie.substring(0, name.length + 1) == (name + '=')) {
                            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                            break;
                        }
                    }
                }
                return cookieValue;
            }
        };
        var COOKIE_NAME = 'fldt';
        var COOKIE_NAME_ACTIVE = COOKIE_NAME + '_active';
        var fldt = {
            init: function () {
                $('#flDebug').show();
                var current = null;
                $('#flDebugPanelList li a').click(function () {
                    if (!this.className) {
                        return false;
                    }
                    current = $('#flDebug #' + this.className + '-content');
                    if (current.is(':visible')) {
                        $(document).trigger('close.flDebug');
                        $(this).parent().removeClass('active');
                    } else {
                        $('.panelContent').hide(); // Hide any that are already open
                        current.show();
                        $('#flDebugToolbar li').removeClass('active');
                        $(this).parent().addClass('active');
                    }
                    return false;
                });
                $('#flDebugPanelList li .switch').click(function () {
                    var $panel = $(this).parent();
                    var $this = $(this);
                    var dom_id = $panel.attr('id');

                    // Turn cookie content into an array of active panels
                    var active_str = $.cookie(COOKIE_NAME_ACTIVE);
                    var active = (active_str) ? active_str.split(';') : [];
                    active = $.grep(active, function (n, i) {
                        return n != dom_id;
                    });

                    if ($this.hasClass('active')) {
                        $this.removeClass('active');
                        $this.addClass('inactive');
                    } else {
                        active.push(dom_id);
                        $this.removeClass('inactive');
                        $this.addClass('active');
                    }

                    if (active.length > 0) {
                        $.cookie(COOKIE_NAME_ACTIVE, active.join(';'), {
                            path: '/', expires: 10
                        });
                    } else {
                        $.cookie(COOKIE_NAME_ACTIVE, null, {
                            path: '/', expires: -1
                        });
                    }
                });
                $('#flDebug a.flDebugClose').click(function () {
                    $(document).trigger('close.flDebug');
                    $('#flDebugToolbar li').removeClass('active');
                    return false;
                });
                $('#flDebug a.remoteCall').click(function () {
                    $('#flDebugWindow').load(this.href, {}, function () {
                        $('#flDebugWindow a.flDebugBack').click(function () {
                            $(this).parent().parent().hide();
                            return false;
                        });
                    });
                    $('#flDebugWindow').show();
                    return false;
                });
                $('#flDebugTemplatePanel a.flTemplateShowContext').click(function () {
                    fldt.toggle_arrow($(this).children('.toggleArrow'))
                    fldt.toggle_content($(this).parent().next());
                    return false;
                });
                $('#flDebugSQLPanel a.flSQLShowStacktrace').click(function () {
                    fldt.toggle_content($('.flSQLHideStacktraceDiv', $(this).parents('tr')));
                    return false;
                });
                $('#flHideToolBarButton').click(function () {
                    fldt.hide_toolbar(true);
                    return false;
                });
                $('#flShowToolBarButton').click(function () {
                    fldt.show_toolbar();
                    return false;
                });
                $(document).bind('close.flDebug', function () {
                    // If a sub-panel is open, close that
                    if ($('#flDebugWindow').is(':visible')) {
                        $('#flDebugWindow').hide();
                        return;
                    }
                    // If a panel is open, close that
                    if ($('.panelContent').is(':visible')) {
                        $('.panelContent').hide();
                        return;
                    }
                    // Otherwise, just minimize the toolbar
                    if ($('#flDebugToolbar').is(':visible')) {
                        fldt.hide_toolbar(true);
                        return;
                    }
                });
                if ($.cookie(COOKIE_NAME)) {
                    fldt.hide_toolbar(false);
                } else {
                    fldt.show_toolbar(false);
                }
                $('#flDebug table.tablesorter').each(function () {
                            var headers = {};
                            $(this).find('thead th').each(function (idx, elem) {
                                headers[idx] = $(elem).data();
                            });
                            $(this).tablesorter({headers: headers});
                        })
                        .bind('sortEnd', function () {
                            $(this).find('tbody tr').each(function (idx, elem) {
                                var even = idx % 2 === 0;
                                $(elem)
                                        .toggleClass('flDebugEven', even)
                                        .toggleClass('flDebugOdd', !even);
                            });
                        });
            },
            toggle_content: function (elem) {
                if (elem.is(':visible')) {
                    elem.hide();
                } else {
                    elem.show();
                }
            },
            close: function () {
                $(document).trigger('close.flDebug');
                return false;
            },
            hide_toolbar: function (setCookie) {
                // close any sub panels
                $('#flDebugWindow').hide();
                // close all panels
                $('.panelContent').hide();
                $('#flDebugToolbar li').removeClass('active');
                // finally close toolbar
                $('#flDebugToolbar').hide('fast');
                $('#flDebugToolbarHandle').show();
                // Unbind keydown
                $(document).unbind('keydown.flDebug');
                if (setCookie) {
                    $.cookie(COOKIE_NAME, 'hide', {
                        path: '/',
                        expires: 10
                    });
                }
            },
            show_toolbar: function (animate) {
                // Set up keybindings
                $(document).bind('keydown.flDebug', function (e) {
                    if (e.keyCode == 27) {
                        fldt.close();
                    }
                });
                $('#flDebugToolbarHandle').hide();
                if (animate) {
                    $('#flDebugToolbar').show('fast');
                } else {
                    $('#flDebugToolbar').show();
                }
                $.cookie(COOKIE_NAME, null, {
                    path: '/',
                    expires: -1
                });
            },
            toggle_arrow: function (elem) {
                var uarr = String.fromCharCode(0x25b6);
                var darr = String.fromCharCode(0x25bc);
                elem.html(elem.html() == uarr ? darr : uarr);
            },
            load_href: function (href) {
                $.get(href, function (data, status, xhr) {
                    document.open();
                    document.write(xhr.responseText);
                    document.close();
                });
                return false;
            },
            $: $
        };
        $(document).ready(function () {
            fldt.init();
        });
        window.fldt = fldt;

    })(jQuery.noConflict(true));
</script>
